<?xml version="1.0" encoding="utf-8"?>
<module name="cznic-dns-server"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:dnss="http://www.nic.cz/ns/yang/dns-server"
	xmlns:h="http://www.w3.org/1999/xhtml">
  <namespace uri="http://www.nic.cz/ns/yang/dns-server"/>
  <prefix value="dnss"/>
  <yang-version value="1.1"/>
  <import module="ietf-inet-types">
    <prefix value="inet"/>
  </import>
  <import module="ietf-yang-types">
    <prefix value="yang"/>
  </import>
  <import module="iana-dns-class-rr-type">
    <prefix value="dnsct"/>
  </import>
  <import module="cznic-dns-opcode-rcode">
    <prefix value="dnsocrc"/>
  </import>
  <import module="cznic-tsig-algorithms">
    <prefix value="tsig"/>
  </import>
  <organization>
    <text>CZ.NIC, z. s. p. o.</text>
  </organization>
  <contact>
    <text>
      <h:p>
        Editor:   Ladislav Lhotka<h:br/>
                  &lt;mailto:lhotka@nic.cz&gt;
      </h:p>
    </text>
  </contact>
  <description>
    <text>
      This YANG module defines the data model for an authoritative DNS server.
    </text>
  </description>

  <revision date="2019-03-21">
    <description>
      <text>Initial revision.</text>
    </description>
  </revision>

  <!-- Features -->

  <feature name="acl-entry-port">
    <description>
      <text>
	This feature indicates support for specifying a port number in
	access control entries.
      </text>
    </description>
  </feature>

  <feature name="any-to-tcp">
    <description>
      <text>
	This feature indicates support for answering ANY queries over UDP with
	an empty response and TC bit set.
      </text>
    </description>
  </feature>

  <feature name="journal-from-differences">
    <description>
      <text>This feature indicates support for generating a set of
      differences from two versions of full zone file.</text>
    </description>
  </feature>
  
  <!-- Identities -->

  <identity name="query-module-type">
    <description>
      <text>
	Base identity from which query module types are derived.
      </text>
    </description>
  </identity>

  <!-- Typedefs -->

  <typedef name="rr-ttl">
    <description>
      <text>
	This type is used for TTL values of DNS resource records.
      </text>
    </description>
    <type name="int32">
      <range value="0..max"/>
    </type>
    <units name="seconds"/>
  </typedef>

  <typedef name="packet-type">
    <description>
      <text>
	This type defines an enumeration for types of packets received
	by a DNS server.
      </text>
    </description>
    <type name="enumeration">
      <enum name="invalid">
	<description>
	  <text>Invalid packet</text>
	</description>
      </enum>
      <enum name="normal">
	<description>
	  <text>Normal DNS query</text>
	</description>
      </enum>
      <enum name="axfr">
	<description>
	  <text>Authoritative zone transfer</text>
	</description>
      </enum>
      <enum name="ixfr">
	<description>
	  <text>Incremental zone transfer</text>
	</description>
      </enum>
      <enum name="notify">
	<description>
	  <text>NOTIFY message</text>
	</description>
      </enum>
      <enum name="update">
	<description>
	  <text>UPDATE message</text>
	</description>
      </enum>
    </type>
  </typedef>
  
  <typedef name="fs-path">
    <description>
      <text>
	<h:p>This type is used for specifying a
	filesystem path (absolute or relative).</h:p>
	<h:p>An implementation must check that the string satisfies
	all rules of the underlying operating system.</h:p>
      </text>
    </description>
    <type name="string"/>
  </typedef>
  
  <typedef name="acl-ref">
    <description>
      <text>
	This type is used for referring to a configured access control
	list.
      </text>
    </description>
    <type name="leafref">
      <path value="/dnss:dns-server/dnss:access-control-list/dnss:name"/>
    </type>
  </typedef>

  <typedef name="key-ref">
    <description>
      <text>
	This type is used for referring to a configured TSIG key.
      </text>
    </description>
    <type name="leafref">
      <path value="/dnss:dns-server/dnss:key/dnss:name"/>
    </type>
  </typedef>

  <typedef name="remote-ref">
    <description>
      <text>
	This type is used for referring to a configured remote server.
      </text>
    </description>
    <type name="leafref">
      <path value="/dnss:dns-server/dnss:remote-server/dnss:name"/>
    </type>
  </typedef>

  <typedef name="zone-ref">
    <description>
      <text>
	This type is used for referring to a configured zone.
      </text>
    </description>
    <type name="leafref">
      <path value="/dnss:dns-server/dnss:zones/dnss:zone/dnss:domain"/>
    </type>
  </typedef>

  <!-- Groupings -->

  <grouping name="counter64">
    <description>
      <text>
	This grouping defines a 64-bit zero-based counter.
      </text>
    </description>
    <leaf name="count">
      <type name="yang:zero-based-counter64"/>
      <default value="0"/>
      <description>
	<text>
	  64-bit zero based counter.
	</text>
      </description>
    </leaf>
  </grouping>
  
  <grouping name="endpoint-address">
    <description>
      <text>This grouping defines a TCP/IP endpoint address, i.e., the
      combination of an IP address and port number.</text>
    </description>
    <leaf name="ip-address">
      <type name="inet:ip-address"/>
      <mandatory value="true"/>
      <description>
	<text>IPv4/IPv6 address.</text>
      </description>
    </leaf>
    <leaf name="port">
      <type name="inet:port-number"/>
      <description>
	<text>Port number.</text>
      </description>
    </leaf>
  </grouping>
  
  <grouping name="entry-name">
    <description>
      <text>
	This grouping defines a leaf that is intended for use as a
	list key.
      </text>
    </description>
    <leaf name="name">
      <description>
	<text>
	  Name of a list entry.
	</text>
      </description>
      <type name="string"/>
    </leaf>
  </grouping>

  <grouping name="acls">
    <description>
      <text>This grouping defines a list of ACL references.</text>
    </description>
    <leaf-list name="access-control-list">
      <type name="acl-ref"/>
      <description>
	<text>
	  List of references to access control lists.
	</text>
      </description>
    </leaf-list>
  </grouping>

  <grouping name="description">
    <description>
      <text>This grouping defines 'description' leaf that can be added
      to various objects.</text>
    </description>
    <leaf name="description">
      <description>
	<text>Textual description of an object.</text>
      </description>
      <type name="string"/>
    </leaf>
  </grouping>

  <grouping name="pid">
    <description>
      <text>
	This grouping defines PID leaf for use in RPC replies. 
      </text>
    </description>
    <leaf name="pid">
      <type name="uint32"/>
      <mandatory value="true"/>
      <description>
	<text>
	  Return PID of the DNS server process. 
	</text>
      </description>
    </leaf>
  </grouping>

  <!-- State data -->

  <container name="dns-server-state">
    <config value="false"/>
    <description>
      <text>
	Operational state of the name server.
      </text>
    </description>
    <container name="server">
      <description>
	<text>
	  State data of the server process.
	</text>
      </description>
      <leaf name="boot-time">
	<type name="yang:date-and-time"/>
	<mandatory value="true"/>
	<description>
	  <text>
	    Time when the DNS server was started.
	  </text>
	</description>
      </leaf>
      <leaf name="config-time">
	<type name="yang:date-and-time"/>
	<mandatory value="true"/>
	<description>
	  <text>
	    Time when the DNS server was last (re)configured.
	  </text>
	</description>
      </leaf>
    </container>
    <list name="zone">
      <description>
	<text>
	  State data of a zone.
	</text>
      </description>
      <key value="domain"/>
      <leaf name="domain">
	<type name="inet:domain-name"/>
	<description>
	  <text>Zone name.</text>
	</description>
      </leaf>
      <leaf name="class">
	<type name="dnsct:dns-class"/>
	<default value="IN"/>
	<description>
	  <text>DNS class of the zone.</text>
	</description>
      </leaf>
      <leaf name="server-role">
	<type name="enumeration">
	  <enum name="master">
	    <description>
	      <text>Master for the zone.</text>
	    </description>
	  </enum>
	  <enum name="slave">
	    <description>
	      <text>Slave for the zone.</text>
	    </description>
	  </enum>
	</type>
	<mandatory value="true"/>
	<description>
	  <text>The role of the server for the parent zone.</text>
	</description>
      </leaf>
      <leaf name="serial">
	<type name="uint32"/>
	<mandatory value="true"/>
	<description>
	  <text>
	    Zone's SOA serial number.
	  </text>
	</description>
      </leaf>
      <container name="statistics">
	<description>
	  <text>
	    Zone statistics.
	  </text>
	</description>
	<container name="opcodes">
	  <description>
	    <text>
	      Opcode statistics.
	    </text>
	  </description>
	  <list name="opcode-count">
	    <key value="opcode"/>
	    <description>
	      <text>
		Each entry gives the count of queries with the given
		opcode.
	      </text>
	    </description>
	    <leaf name="opcode">
	      <type name="dnsocrc:dns-opcode"/>
	      <description>
		<text>DNS opcode.</text>
	      </description>
	    </leaf>
	    <uses name="counter64"/>
	  </list>
	</container>
	<container name="rcodes">
	  <description>
	    <text>
	      Rcode statistics.
	    </text>
	  </description>
	  <list name="rcode-count">
	    <key value="rcode"/>
	    <description>
	      <text>
		Each entry gives the count of responses with the given
		rcode.
	      </text>
	    </description>
	    <leaf name="rcode">
	      <type name="dnsocrc:dns-rcode"/>
	      <description>
		<text>DNS rcode.</text>
	      </description>
	    </leaf>
	    <uses name="counter64"/>
	  </list>
	</container>
	<container name="packets">
	  <description>
	    <text>
	      Packet statistics.
	    </text>
	  </description>
	  <list name="packet-count">
	    <key value="packet-type"/>
	    <description>
	      <text>
		Each entry gives the count of packets of the given
		type.
	      </text>
	    </description>
	    <leaf name="packet-type">
	      <type name="packet-type"/>
	      <description>
		<text>DNS packet type.</text>
	      </description>
	    </leaf>
	    <uses name="counter64"/>
	  </list>
	</container>
      </container>
    </list>
  </container>
  
  <!-- Configuration data -->
  
  <container name="dns-server">
    <description>
      <text>
	Configuration of a DNS server.
      </text>
    </description>
    <uses name="description"/>
    <container name="server-options">
      <description>
	<text>
	  Configuration of global server options.
	</text>
      </description>
      <uses name="description"/>
      <container name="chaos-identity">
	<presence value="report server identity to CHAOS queries"/>
	<description>
	  <text>
	    Presence of this container enables reporting server
	    identity in response to queries in the CHAOS class.
	  </text>
	</description>
	<reference>
	  <text>
	    RFC 4892: Requirements for a Mechanism Identifying a Name
	    Server Instance.
	  </text>
	</reference>
	<leaf name="id-server">
	  <type name="string"/>
	  <description>
	    <text>
	      <h:p>Server identitity string sent in response to
	      queries for ID.SERVER or BIND.HOSTNAME resource in the
	      CHAOS class.</h:p>
	      <h:p>Default: FQDN of the server.</h:p>
	    </text>
	  </description>
	</leaf>
	<leaf name="version">
	  <type name="string"/>
	  <description>
	    <text>
	      <h:p>Server software version sent in response to queries
	      for VERSION.SERVER or VERSION.BIND resource in the CHAOS
	      class.</h:p>
	      <h:p>Default: implementation-specific string.</h:p>
	    </text>
	  </description>
	</leaf>
      </container>
      <container name="nsid-identity">
	<presence value="report server identity to NSID query"/>
	<description>
	  <text>
	    Presence of this container enables reporting server
	    identity string in response to EDNS NSID query.
	  </text>
	</description>
	<reference>
	  <text>
	    RFC 5001: DNS Name Server Identifier (NSID) Option.
	  </text>
	</reference>
	<leaf name="nsid">
	  <type name="string"/>
	  <description>
	    <text>
	      <h:p>Server identitity string.</h:p>
	      <h:p>Default: FQDN of the server.</h:p>
	    </text>
	  </description>
	</leaf>
      </container>
      <list name="listen-endpoint">
	<description>
	  <text>
	    <h:p>List of IP addresses and optional ports on which the
	    server listens.</h:p>
	    <h:p>If the 'ip-address' value is '0.0.0.0' (for IPv4)
	    and/or '::', the server listens on all configured
	    IPv4/IPv6 addresses that are not explicitly configured in
	    this list.</h:p>
	  </text>
	</description>
	<key value="name"/>
	<unique tag="ip-address port"/>
	<uses name="entry-name"/>
	<uses name="endpoint-address">
	  <refine target-node="port">
	    <default value="53"/>
	  </refine>
	</uses>
      </list>
      <container name="resources">
	<description>
	  <text>
	    Configuration of server resources.
	  </text>
	</description>
	<leaf name="max-tcp-clients">
	  <type name="uint16"/>
	  <default value="100"/>
	  <description>
	    <text>
	      Maximum number of simultaneous TCP client connections.
	    </text>
	  </description>
	</leaf>
	<leaf name="max-udp-size">
	  <type name="uint16"/>
	  <default value="4096"/>
	  <description>
	    <text>
	      Maximum size of a UDP datagram with EDNS0 extensions.
	    </text>
	  </description>
	</leaf>
      </container>
      <container name="filesystem-paths">
	<description>
	  <text>
	    Configuration of directories and file paths.
	  </text>
	</description>
	<leaf name="run-time-dir">
	  <type name="fs-path"/>
	  <description>
	    <text>
	      <h:p>Default location of various run-time files such as
	      PID file.</h:p>
	      <h:p>Default: implementation specific.</h:p>
	    </text>
	  </description>
	</leaf>
	<leaf name="pid-file">
	  <type name="fs-path"/>
	  <description>
	    <text>
	      <h:p>Path of the PID file.</h:p>
	      <h:p>If the path is relative, the value of
	      'run-time-dir' is prepended to it.</h:p>
	      <h:p>Default: implementation specific.</h:p>
	    </text>
	  </description>
	</leaf>
      </container>
      <container name="privileges">
	<presence value="process owner (and group)"/>
	<description>
	  <text>
	    Parameters in this container can be used to run the server
	    with less privileges. The server MUST switch to the
	    corresponding UID/GID immediately after binding to
	    privileged ports.
	  </text>
	</description>
	<leaf name="user">
	  <type name="string"/>
	  <mandatory value="true"/>
	  <description>
	    <text>User name.</text>
	  </description>
	</leaf>
	<leaf name="group">
	  <type name="string"/>
	  <description>
	    <text>Group name.</text>
	  </description>
	</leaf>
      </container>
      <container name="response-rate-limiting">
	<presence value="enable RRL"/>
	<description>
	  <text>
	    Configuration of Response Rate Limiting that is used to
	    prevent/mitigate DNS reflection and amplification attacks.
	  </text>
	</description>
	<reference>
	  <text>
	    http://ss.vix.su/~vixie/isc-tn-2012-1.txt
	  </text>
	</reference>
	<leaf name="responses-per-second">
	  <type name="uint16"/>
	  <default value="5"/>
	  <description>
	    <text>
	      <h:p>Maximum number of times that the a set of related
	      requestors is sent the same answer within a one-second
	      interval.</h:p>
	      <h:p>The sets of related requestors are determined based
	      on an implementation-specific classification scheme,
	      which typically involves several query parameters such
	      as source address prefix, query type, domain name or
	      rcode.</h:p>
	      <h:p>Queries that exceed the limit are either discarded
	      or replied with a SLIP response that has the TC bit set
	      and thus instructs the requestor to switch to TCP.</h:p>
	      <h:p>The value of zero means no rate limit.</h:p>
	    </text>
	  </description>
	</leaf>
	<leaf name="slip">
	  <type name="uint8"/>
	  <default value="1"/>
	  <description>
	    <text>
	      <h:p>If this parameter is set to N, then every Nth
	      response that doesn't pass the rate limit check is sent
	      as the SLIP message instead of being discarded.</h:p>
	      <h:p>The value of zero turns the SLIP feature off.</h:p>
	    </text>
	  </description>
	</leaf>
	<leaf name="table-size">
	  <type name="uint32"/>
	  <description>
	    <text>
	      <h:p>The size of the (hash) table, i.e., the number of
	      classification buckets that the server keeps in
	      memory.</h:p>
	    </text>
	  </description>
	</leaf>
      </container>
    </container>
    <list name="access-control-list">
      <description>
	<text>Access control lists.</text>
      </description>
      <key value="name"/>
      <uses name="entry-name"/>
      <uses name="description"/>
      <list name="network">
	<key value="name"/>
	<unique tag="ip-prefix port"/>
	<description>
	  <text>Identification of a network.</text>
	</description>
	<uses name="entry-name"/>
	<leaf name="ip-prefix">
	  <type name="inet:ip-prefix"/>
	  <mandatory value="true"/>
	  <description>
	    <text>
	      IPv4 or IPv6 prefix in the usual ADDRESS/LENGTH notation.
	    </text>
	  </description>
	</leaf>
	<leaf name="port">
	  <if-feature name="acl-entry-port"/>
	  <when condition="../ip-prefix">
	    <description>
	      <text>
		Port is valid only if the ACL entry specifies an IP
		prefix.
	      </text>
	    </description>
	  </when>
	  <type name="inet:port-number"/>
	  <description>
	    <text>
	      Port associated with the access control entry.
	    </text>
	  </description>
	</leaf>
      </list>
      <leaf-list name="key">
	<type name="key-ref"/>
	<description>
	  <text>
	    List of TSIG keys associated with the access control
	    entry.
	  </text>
	</description>
      </leaf-list>
      <leaf-list name="operation">
	<type name="enumeration">
	  <enum name="transfer">
	    <description>
	      <text>Transfer operation</text>
	    </description>
	  </enum>
	  <enum name="notify">
	    <description>
	      <text>Notify operation</text>
	    </description>
	  </enum>
	  <enum name="update">
	    <description>
	      <text>Update operation</text>
	    </description>
	  </enum>
	  <enum name="control">
	    <description>
	      <text>Control operation</text>
	    </description>
	  </enum>
	</type>
	<min-elements value="1"/>
	<description>
	  <text>
	    Operations to which the ACL is applied.
	  </text>
	</description>
      </leaf-list>
      <leaf name="action">
	<type name="enumeration">
	  <enum name="allow">
	    <description>
	      <text>Allow action</text>
	    </description>
	  </enum>
	  <enum name="deny">
	    <description>
	      <text>Deny action</text>
	    </description>
	  </enum>
	</type>
	<default value="allow"/>
	<description>
	  <text>ACL action.</text>
	</description>
      </leaf>
    </list>
    <list name="remote-server">
      <description>
	<text>Definitions of remote servers.</text>
      </description>
      <key value="name"/>
      <uses name="entry-name"/>
      <uses name="description"/>
      <container name="remote">
	<description>
	  <text>
	    Parameters of the remote server.
	  </text>
	</description>
	<uses name="endpoint-address">
	  <refine target-node="port">
	    <default value="53"/>
	  </refine>
	</uses>
      </container>
      <container name="local">
	<description>
	  <text>
	    <h:p>Source address and port of the local server.</h:p>
	    <h:p>If not configured, the normal operating system's
	    source address and port selection is applied.</h:p>
	  </text>
	</description>
	<presence value="local endpoint address"/>
	<uses name="endpoint-address"/>
      </container>
      <leaf name="key">
	<type name="key-ref"/>
	<description>
	  <text>
	    TSIG key associated with the remote server.
	  </text>
	</description>
      </leaf>
    </list>
    <list name="key">
      <description>
	<text>Definitions of TSIG keys.</text>
      </description>
      <key value="name"/>
      <uses name="entry-name"/>
      <uses name="description"/>
      <leaf name="algorithm">
	<type name="identityref">
	  <base name="tsig:tsig-algorithm"/>
	</type>
	<default value="tsig:HMAC-MD5.SIG-ALG.REG.INT"/>
	<description>
	  <text>
	    Authentication algorithm for this key.
	  </text>
	</description>
      </leaf>
      <leaf name="secret">
	<type name="binary"/>
	<mandatory value="true"/>
	<description>
	  <text>The shared secret.</text>
	</description>
      </leaf>
    </list>
    <list name="query-module">
      <key value="type name"/>
      <description>
	<text>
	  <h:p>Configurations of query modules that implement
	  special server behavior in response to certain
	  queries.</h:p>
	  <h:p>Configuration parameters for a particular module are
	  expected to be added via augmentation, and inside a
	  container with presence.</h:p>
	</text>
      </description>
      <ordered-by value="user"/>
      <leaf name="type">
	<type name="identityref">
	  <base name="dnss:query-module-type"/>
	</type>
	<description>
	  <text>
	    Query module type.
	  </text>
	</description>
      </leaf>
      <uses name="entry-name"/>
      <uses name="description"/>
    </list>
    <container name="zones">
      <description>
	<text>Configuration of zones.</text>
      </description>
      <must condition="count(template[default='true']) &lt;= 1">
	<description>
	  <text>
	    No more than one template may be designated as default.
	  </text>
	</description>
	<error-message>
	  <value>Multiple default zone templates.</value>
	</error-message>
      </must>
      <grouping name="zone-options">
	<description>
	  <text>
	    This grouping defines zone options that are used both in
	    the configuration of zones and templates.
	  </text>
	</description>
	<uses name="description"/>
	<leaf name="zones-dir">
	  <type name="fs-path"/>
	  <description>
	    <text>
	      <h:p>Filesystem directory where zone files are
	      stored.</h:p>
	      <h:p>Default: implementation specific.</h:p>
	    </text>
	  </description>
	</leaf>
	<leaf name="file">
	  <type name="fs-path"/>
	  <description>
	    <text>
	      <h:p>Path to zone file.</h:p>
	      <h:p>If the path is relative, the value of 'zones-dir'
	      is prepended to it.</h:p>
	      <h:p>Default: implementation specific.</h:p>
	      <h:p>The following substitutions are supported:</h:p>
	      <h:ul>
		<h:li>'%s' is replaced with the current zone name.</h:li>
		<h:li>'%%' is replaced with a single percent sign.</h:li>
	      </h:ul>
	    </text>
	  </description>
	</leaf>
	<leaf-list name="master">
	  <type name="remote-ref"/>
	  <description>
	    <text>
	      List of references to master servers for the zone from
	      which the local server receives zone data via AXFR/IXFR.
	    </text>
	  </description>
	</leaf-list>
	<container name="notify">
	  <description>
	    <text>Configuration of NOTIFY messages.</text>
	  </description>
	  <reference>
	    <text>
	      RFC 1996: A Mechanism for Prompt Notification of Zone
	      Changes (DNS NOTIFY).
	    </text>
	  </reference>
	  <leaf-list name="recipient">
	    <type name="remote-ref"/>
	    <description>
	      <text>
		List of references to NOTIFY recipients.
	      </text>
	    </description>
	  </leaf-list>
	</container>
	<uses name="acls">
	  <description>
	    <text>
	      Access control lists applied for the zone.
	    </text>
	  </description>
	</uses>
	<leaf name="serial-update-method">
	  <type name="enumeration">
	    <enum name="increment">
	      <description>
		<text>Increment the zone number by one.</text>
	      </description>
	    </enum>
	    <enum name="unix-time">
	      <description>
		<text>
		  <h:p>Set the serial number to the number of
		  seconds since Unix epoch.</h:p>
		  <h:p>If the serial number is already greater than
		  this value, fall back to the 'increment'
		  method.</h:p>
		</text>
	      </description>
	    </enum>
	  </type>
	  <default value="increment"/>
	  <description>
	    <text>
	      Specify the method for updating the zone serial method
	      after a dynamic update or automatic zone signing.
	    </text>
	  </description>
	</leaf>
	<leaf name="any-to-tcp">
	  <if-feature name="any-to-tcp"/>
	  <type name="boolean"/>
	  <default value="false"/>
	  <description>
	    <text>
	      If this flag is on, ANY queries to this zone sent over
	      UDP are served with an empty reply that has the TC bit
	      on.
	    </text>
	  </description>
	</leaf>
	<container name="journal">
	  <description>
	    <text>Zone journal parameters.</text>
	  </description>
	  <leaf name="maximum-journal-size">
	    <type name="uint64"/>
	    <units name="bytes"/>
	    <description>
	      <text>
		<h:p>Maximum size of the zone journal file.</h:p>
		<h:p>Default: no limit, i.e., maximum size supported
		by an implementation.</h:p>
	      </text>
	    </description>
	  </leaf>
	  <leaf name="zone-file-sync-delay">
	    <type name="uint32"/>
	    <units name="seconds"/>
	    <default value="0"/>
	    <description>
	      <text>
		<h:p>Delay between first zone change via IXFR, DDNS or
		automatic DNSSEC signing, and recording the changes to
		the zone file.</h:p>
		<h:p>The value of 0 means no delay, i.e., changes are
		recorded immediately.</h:p>
	      </text>
	    </description>
	  </leaf>
	  <leaf name="from-differences">
	    <if-feature name="journal-from-differences"/>
	    <type name="boolean"/>
	    <default value="false"/>
	    <description>
	      <text>
		<h:p>When 'true' and either a new version of a master
		zone is reloaded from the zone file, or a new version
		of a slave zone is received via zone transfer, the
		server will calculate the differences and record them
		in the journal.</h:p>
	      </text>
	    </description>
	  </leaf>
	</container>
	<list name="query-module">
	  <key value="type name"/>
	  <ordered-by value="user"/>
	  <description>
	    <text>
	      <h:p>A user-ordered list of references to configured
	      query modules.</h:p>
	      <h:p>The modules shall be applied to queries for the
	      current zone in the specified order.</h:p>
	    </text>
	  </description>
	  <leaf name="type">
	    <type name="leafref">
	      <path value="/dns-server/query-module/type"/>
	    </type>
	    <description>
	      <text>Type of the query module</text>
	    </description>
	  </leaf>
	  <leaf name="name">
	    <type name="leafref">
	      <path
		  value="/dns-server/query-module[type=current()/../type]/name"/>
	    </type>
	    <description>
	      <text>Name of the query module.</text>
	    </description>
	  </leaf>
	</list>
      </grouping>
      <list name="template">
	<description>
	  <text>
	    List of zone configuration templates.
	  </text>
	</description>
	<key value="name"/>
	<uses name="entry-name"/>
	<leaf name="default">
	  <type name="boolean"/>
	  <default value="false"/>
	  <description>
	    <text>
	      This flag indicates the default template.
	    </text>
	  </description>
	</leaf>
	<uses name="zone-options"/>
      </list>
      <list name="zone">
	<description>
	  <text>List of zones.</text>
	</description>
	<key value="domain"/>
	<leaf name="domain">
	  <type name="inet:domain-name"/>
	  <description>
	    <text>Zone name.</text>
	  </description>
	</leaf>
	<leaf name="template">
	  <type name="leafref">
	    <path value="/dns-server/zones/template/name"/>
	  </type>
	  <description>
	    <text>Reference to a configured zone template.</text>
	  </description>
	</leaf>
	<uses name="zone-options"/>
      </list>
    </container>
  </container>

  <!-- Operations -->

  <rpc name="start-server">
    <description>
      <text>
	Start the DNS server, or do nothing if it is already running.
      </text>
    </description>
    <output>
      <uses name="pid"/>
    </output>
  </rpc>

  <rpc name="stop-server">
    <description>
      <text>
	Stop the DNS server, or do nothing if it is not running.
      </text>
    </description>
  </rpc>

  <rpc name="restart-server">
    <description>
      <text>
	Restart the DNS server, which is equivalent to executing
	'stop-server' and 'start-server' in sequence.
      </text>
    </description>
    <output>
      <uses name="pid"/>
    </output>
  </rpc>

  <rpc name="reload-server">
    <description>
      <text>
	Reload server configuration.
      </text>
    </description>
  </rpc>

  <rpc name="zone-reload">
    <description>
      <text>Reload specified zones.</text>
    </description>
    <input>
      <leaf-list name="zones">
	<type name="zone-ref"/>
	<description>
	  <text>
	    Domain names of the zones to be reloaded.
	  </text>
	</description>
      </leaf-list>
    </input>
  </rpc>

  <rpc name="zone-refresh">
    <description>
      <text>Refresh slave zones.</text>
    </description>
    <input>
      <leaf-list name="zones">
	<type name="zone-ref"/>
	<description>
	  <text>
	    Domain names of the zones to be refreshed.
	  </text>
	</description>
      </leaf-list>
      <leaf name="force-retransfer">
	<type name="boolean"/>
	<default value="false"/>
	<description>
	  <text>
	    Setting this parameter to true forces retransfer.
	  </text>
	</description>
      </leaf>
    </input>
  </rpc>

  <rpc name="zone-flush">
    <description>
      <text>Flush journal and update zone files.</text>
    </description>
    <input>
      <leaf-list name="zones">
	<type name="zone-ref"/>
	<description>
	  <text>
	    Domain names of the zones to be flushed.
	  </text>
	</description>
      </leaf-list>
    </input>
  </rpc>

</module>
