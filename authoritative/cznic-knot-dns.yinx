<?xml version="1.0" encoding="utf-8"?>
<module name="cznic-knot-dns"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:knot="http://www.nic.cz/ns/yang/knot-dns"
	xmlns:nacm="urn:ietf:params:xml:ns:yang:ietf-netconf-acm"
	xmlns:h="http://www.w3.org/1999/xhtml">
  <namespace uri="http://www.nic.cz/ns/yang/knot-dns"/>
  <prefix value="knot"/>
  <yang-version value="1.1"/>
  <import module="ietf-inet-types">
    <prefix value="inet"/>
  </import>
  <import module="ietf-yang-types">
    <prefix value="yang"/>
  </import>
  <import module="ietf-netconf-acm">
    <prefix value="nacm"/>
  </import>
  <import module="cznic-dns-server">
    <prefix value="dnss"/>
  </import>
  <import module="cznic-dnssec-signing">
    <prefix value="dnssec"/>
  </import>
  <organization>
    <text>CZ.NIC, z. s. p. o.</text>
  </organization>
  <contact>
    <text>
      <h:p>
        Editor:   Ladislav Lhotka<h:br/>
                  &lt;mailto:lhotka@nic.cz&gt;
      </h:p>
    </text>
  </contact>
  <description>
    <text>
      This YANG module augments the 'dns-server' module with
      parameters specific for the Knot-DNS server.
    </text>
  </description>
  <reference>
    <text>https://www.knot-dns.cz/docs/2.0/html/</text>
  </reference>

  <revision date="2019-03-20">
    <description>
      <text>Initial revision.</text>
    </description>
  </revision>

  <!-- Identities -->

  <identity name="dnstap">
    <base name="dnss:query-module-type"/>
    <description>
      <text>
	Query module of this type performs query and response logging.
      </text>
    </description>
  </identity>

  <identity name="synth-record">
    <base name="dnss:query-module-type"/>
    <description>
      <text>
	Query module of this type is able to synthesize forward or
	reverse records.
      </text>
    </description>
  </identity>

  <identity name="dnsproxy">
    <base name="dnss:query-module-type"/>
    <description>
      <text>
	Query module of this type catches all unsatisfied queries and
	forwards them to another server.
      </text>
    </description>
  </identity>

  <identity name="rosedb">
    <base name="dnss:query-module-type"/>
    <description>
      <text>
	Query module of this type allows for overriding responses to
	certain queries before they are looked up in a zone.
      </text>
    </description>
  </identity>

  <!-- Groupings -->

  <grouping name="zone-options">
    <description>
      <text>Knot-specific zone options that are added to generic zone
      options.</text>
    </description>
    <leaf name="semantic-checks">
      <type name="boolean"/>
      <description>
	<text>
	  <h:p>Enable additional checks of zone data semantics
	  (failures are logged):</h:p>
	  <h:ul>
	    <h:li>missing NS record at the zone apex,</h:li>
	    <h:li>missing glue A or AAAA records,</h:li>
	    <h:li>broken or non-cyclic NSEC(3) chain,</h:li>
	    <h:li>wrong NSEC(3) type bitmap,</h:li>
	    <h:li>multiple NSEC records at the same node,</h:li>
	    <h:li>missing NSEC records at authoritative nodes,</h:li>
	    <h:li>extra record types under the same name as NSEC3
	    record (this is valid but Knot will not serve such a zone
	    correctly),</h:li>
	    <h:li>NSEC3-unsecured delegation that is not part of
	    Opt-out span,</h:li>
	    <h:li>wrong original TTL value in NSEC3 records,</h:li>
	    <h:li>wrong RDATA TTL value in RRSIG record.</h:li>
	    <h:li>signer name in RRSIG RR not the same as in
	    DNSKEY,</h:li>
	    <h:li>signed RRSIG,</h:li>
	    <h:li>not all RRs in node are signed,</h:li>
	    <h:li>wrong key flags or wrong key in RRSIG record (not
	    the same as ZSK).</h:li>
	  </h:ul>
	</text>
      </description>
    </leaf>
  </grouping>

  <grouping name="dnssec-sign-options">
    <description>
      <text>Knot-specific options for automatic DNSSEC signing.</text>
    </description>
    <leaf name="kasp-db">
      <type name="string"/>
      <description>
	<text>
	  <h:p>Path to Key and Signing Policy (KASP) database
	  directory.</h:p>
	  <h:p>Default: 'keys' subdirectory of the directory specified
	  in 'zones-dir'.</h:p>
	</text>
      </description>
    </leaf>
  </grouping>
  
  <!-- State data -->

  <augment target-node="/dnss:dns-server-state/dnss:zone">
    <description>
      <text>
	Knot-specific zone state data.
      </text>
    </description>
    <container name="next-event">
      <description>
	<text>
	  Information about the next event scheduled for the zone.
	</text>
      </description>
      <choice name="next-event">
	<description>
	  <text>Next event details or none, if no event is
	  scheduled.</text>
	</description>
	<leaf name="none">
	  <type name="empty"/>
	  <description>
	    <text>No event scheduled for the zone.</text>
	  </description>
	</leaf>
	<case name="scheduled-event">
	  <description>
	    <text>An event is scheduled.</text>
	  </description>
	  <leaf name="event-type">
	    <description>
	      <text>Type of the event.</text>
	    </description>
	    <type name="enumeration">
	      <enum name="load">
		<description>
		  <text>load event</text>
		</description>
	      </enum>
	      <enum name="refresh">
		<description>
		  <text>refresh event</text>
		</description>
	      </enum>
	      <enum name="transfer">
		<description>
		  <text>transfer event</text>
		</description>
	      </enum>
	      <enum name="update">
		<description>
		  <text>update event</text>
		</description>
	      </enum>
	      <enum name="expiration">
		<description>
		  <text>expiration event</text>
		</description>
	      </enum>
	      <enum name="journal-flush">
		<description>
		  <text>journal flush event</text>
		</description>
	      </enum>
	      <enum name="notify">
		<description>
		  <text>notify event</text>
		</description>
	      </enum>
	      <enum name="dnssec-resign">
		<description>
		  <text>dnssec resign event</text>
		</description>
	      </enum>
	    </type>
	  </leaf>
	  <choice name="event-time">
	    <description>
	      <text>
		Information about scheduled event time, or that it is
		already pending."
	      </text>
	    </description>
	    <leaf name="pending">
	      <type name="empty"/>
	      <description>
		<text>The event is already pending.</text>
	      </description>
	    </leaf>
	    <leaf name="time">
	      <type name="yang:date-and-time"/>
	      <description>
		<text>
		  Date and time for which the event is scheduled.
		</text>
	      </description>
	    </leaf>
	  </choice>
	</case>
      </choice>
    </container>
  </augment>

  <!-- Configuration data -->

  <augment target-node="/dnss:dns-server">
    <description>
      <text>
	Knot-specific configuration data.
      </text>
    </description>
    <list name="log">
      <key value="target"/>
      <description>
	<text>
	  <h:p>List of log options.</h:p>
	  <h:p>If no entry is present, messages with severity
	  'warning' or higher are logged to syslog and standard
	  error.</h:p>
	</text>
      </description>
      <typedef name="severity">
	<description>
	  <text>Severity levels.</text>
	</description>
	<type name="enumeration">
	  <enum name="critical">
	    <description>
	      <text>critical severity level</text>
	    </description>
	  </enum>
	  <enum name="error">
	    <description>
	      <text>error severity level</text>
	    </description>
	  </enum>
	  <enum name="warning">
	    <description>
	      <text>warning severity level</text>
	    </description>
	  </enum>
	  <enum name="notice">
	    <description>
	      <text>notice severity level</text>
	    </description>
	  </enum>
	  <enum name="info">
	    <description>
	      <text>info severity level</text>
	    </description>
	  </enum>
	  <enum name="debug">
	    <description>
	      <text>debug severity level</text>
	    </description>
	  </enum>
	</type>
	<default value="warning"/>
      </typedef>
      <leaf name="target">
	<description>
	  <text>
	    <h:p>Destination of log messages. The value can be either
	    a file name, or one of the following special strings:</h:p>
	    <h:ul>
	      <h:li>stdout: log messages are sent to standard output,</h:li>
	      <h:li>stderr: log messages are sent to standard error,</h:li>
	      <h:li>syslog: log messages are passed to the syslog facility.</h:li>
	    </h:ul>
	  </text>
	</description>
	<type name="string"/>
      </leaf>
      <uses name="dnss:description"/>
      <leaf name="server">
	<type name="severity"/>
	<description>
	  <text>
	    Severity threshold for server-related messages.
	  </text>
	</description>
      </leaf>
      <leaf name="zone">
	<type name="severity"/>
	<description>
	  <text>
	    Severity threshold for zone-related messages.
	  </text>
	</description>
      </leaf>
      <leaf name="any">
	<type name="severity"/>
	<description>
	  <text>
	    Severity threshold for all messages.
	  </text>
	</description>
      </leaf>
    </list>
    <leaf name="control-socket">
      <type name="dnss:fs-path"/>
      <default value="knot.sock"/>
      <nacm:default-deny-write/>
      <description>
	<text>
	  <h:p>Filename of the Knot control socket (Unix
	  domain).</h:p>
	  <h:p>A relative name is prepended with the directory
	  specified in 'dnss:run-time-dir'.</h:p>
	</text>
      </description>
    </leaf>
  </augment>

  <augment target-node="/dnss:dns-server/dnss:server-options/dnss:resources">
    <description>
      <text>
	Configuration of Knot-specific server resources. 
      </text>
    </description>
    <leaf name="tcp-workers">
      <type name="uint8">
	<range value="1..max"/>
      </type>
      <description>
	<text>
	  <h:p>Number of workers (threads) handling TCP queries.</h:p>
	  <h:p>Default: auto-selected value based on the number of
	  available CPU cores.</h:p>
	</text>
      </description>
    </leaf>
    <leaf name="udp-workers">
      <type name="uint8">
	<range value="1..max"/>
      </type>
      <description>
	<text>
	  <h:p>Number of workers (threads) handling UDP queries.</h:p>
	  <h:p>Default: auto-selected value based on the number of
	  available CPU cores.</h:p>
	</text>
      </description>
    </leaf>
    <leaf name="background-workers">
      <type name="uint8">
	<range value="1..max"/>
      </type>
      <description>
	<text>
	  <h:p>Number of workers (threads) performing background
	  operations (zone loading, zone updates etc.).</h:p>
	  <h:p>Default: auto-selected value based on the number of
	  available CPU cores.</h:p>
	</text>
      </description>
    </leaf>
    <leaf name="tcp-idle-timeout">
      <type name="uint32"/>
      <units name="seconds"/>
      <default value="20"/>
      <description>
	<text>
	  Maximum idle time between requests on a TCP connection.
	</text>
      </description>
    </leaf>
    <leaf name="tcp-handshake-timeout">
      <type name="uint32"/>
      <units name="seconds"/>
      <default value="5"/>
      <description>
	<text>
	  Maximum delay of the first query after a TCP connection is
	  established.
	</text>
      </description>
    </leaf>
    <leaf name="tcp-reply-timeout">
      <type name="uint32"/>
      <units name="seconds"/>
      <default value="10"/>
      <description>
	<text>
	  Maximum time to wait for a reply to an SOA query.
	</text>
      </description>
    </leaf>
  </augment>
  
  <augment target-node="/dnss:dns-server/dnss:server-options">
    <description>
      <text>
	Configuration of Knot-specific server options.
      </text>
    </description>
    <leaf name="async-start">
      <type name="boolean"/>
      <default value="false"/>
      <description>
	<text>
	  Instructs the server to start asynchronously. Until zones
	  are loaded, queries are responded with SERVFAIL.
	</text>
      </description>
    </leaf>
  </augment>

  <augment target-node="/dnss:dns-server/dnss:zones/dnss:template">
    <description>
      <text>
	Knot-specific configuration of a zone template.
      </text>
    </description>
    <uses name="knot:zone-options"/>
  </augment>
  
  <augment
      target-node="/dnss:dns-server/dnss:zones/dnss:template/dnssec:dnssec-signing">
    <description>
      <text>
	Knot-specific DNSSEC signing configuration of a zone template.
      </text>
    </description>
    <uses name="dnssec-sign-options"/>
  </augment>
  
  <augment
      target-node="/dnss:dns-server/dnss:query-module">
    <when condition="derived-from-or-self(dnss:type, 'knot:dnstap')"/>
    <description>
      <text>
	Configuration of 'dnstap' query module.
      </text>
    </description>
    <container name="dnstap">
      <presence value="dnstap query module"/>
      <description>
	<text>
	  <h:p>Configuration data for the 'dnstap' query module.</h:p>
	  <h:p>This module performs query and response logging via the
	  dnstap library.</h:p>
	</text>
      </description>
      <reference>
	<text>http://dnstap.info</text>
      </reference>
      <choice name="sink">
	<mandatory value="true"/>
	<description>
	  <text>
	    Destination for query/response logs, can be a file or Unix
	    domain socket.
	  </text>
	</description>
	<leaf name="file">
	  <type name="dnss:fs-path"/>
	  <description>
	    <text>File path.</text>
	  </description>
	</leaf>
	<leaf name="unix-socket">
	  <type name="dnss:fs-path"/>
	  <description>
	    <text>
	      Unix domain socket path.
	    </text>
	  </description>
	</leaf>
      </choice>
    </container>
  </augment>
  
  <augment
      target-node="/dnss:dns-server/dnss:query-module">
    <when condition="derived-from-or-self(dnss:type, 'knot:synth-record')"/>
    <description>
      <text>
	Configuration of 'synth-record' query module.
      </text>
    </description>
    <container name="synth-record">
      <description>
	<text>
	  <h:p>Configuration data for the 'synth-record' query module.</h:p>
	  <h:p>This module allows for synthesizing forward or reverse
	  records for a given prefix and subnet.</h:p>
	</text>
      </description>
      <presence value="synth-record query module"/>
      <leaf name="record-type">
	<type name="enumeration">
	  <enum name="forward">
	    <description>
	      <text>Forward records.</text>
	    </description>
	  </enum>
	  <enum name="reverse">
	    <description>
	      <text>Reverse records.</text>
	    </description>
	  </enum>
	</type>
	<mandatory value="true"/>
	<description>
	  <text>Type of the synthesized records.</text>
	</description>
      </leaf>
      <leaf name="prefix">
	<type name="string"/>
	<mandatory value="true"/>
	<description>
	  <text>
	    <h:p>A prefix of the record owner.</h:p>
	    <h:p>Dots are not allowed, parts of a synthetic name must be
	    dash-separated.</h:p>
	    <h:p>TODO: regex pattern?</h:p>
	  </text>
	</description>
      </leaf>
      <leaf name="origin">
	<type name="inet:domain-name"/>
	<must condition="../record-type = 'reverse'">
	  <description>
	    <text>This parameter is only valid for reverse records.</text>
	  </description>
	  <error-message>
	    <value>origin is only valid for reverse records</value>
	  </error-message>
	</must>
	<description>
	  <text>Zone origin.</text>
	</description>
      </leaf>
      <leaf name="ttl">
	<type name="uint16"/>
	<units name="seconds"/>
	<default value="3600"/>
	<description>
	  <text>Time-to-live value of the generated records.</text>
	</description>
      </leaf>
      <leaf name="network">
	<type name="inet:ip-prefix"/>
	<description>
	  <text>Network subnet.</text>
	</description>
      </leaf>
    </container>
  </augment>
  
  <augment
      target-node="/dnss:dns-server/dnss:query-module">
    <when condition="derived-from-or-self(dnss:type, 'knot:dnsproxy')"/>
    <description>
      <text>
	Configuration of 'dnsproxy' query module.
      </text>
    </description>
    <container name="dnsproxy">
      <description>
	<text>
	  <h:p>Configuration data for the 'dnsproxy' query
	  module.</h:p>
	  <h:p>This module catches all unsatisfied queries and
	  forwards them to another server.</h:p>
	</text>
      </description>
      <presence value="dnsproxy query module"/>
      <container name="remote-server">
	<uses name="dnss:endpoint-address"/>
	<description>
	  <text>Address of the remote server.</text>
	</description>
      </container>
    </container>
  </augment>
  
  <augment
      target-node="/dnss:dns-server/dnss:query-module">
    <when condition="derived-from-or-self(dnss:type, 'knot:rosedb')"/>
    <description>
      <text>
	Configuration of 'rosedb' query module.
      </text>
    </description>
    <container name="rosedb">
      <presence value="rosedb query module"/>
      <description>
	<text>
	  <h:p>Configuration data for the 'rosedb' query module.</h:p>
	  <h:p>This module allows for answering certain queries from a
	  database.</h:p>
	</text>
      </description>
      <leaf name="db-dir">
	<type name="dnss:fs-path"/>
	<description>
	  <text>Path to the database directory.</text>
	</description>
      </leaf>
    </container>
  </augment>
  
  <augment target-node="/dnss:dns-server/dnss:zones/dnss:zone">
    <description>
      <text>
	Knot-specific zone configuration.
      </text>
    </description>
    <uses name="knot:zone-options"/>
  </augment>

  <augment
      target-node="/dnss:dns-server/dnss:zones/dnss:zone/dnssec:dnssec-signing">
    <description>
      <text>
	Knot-specific DNSSEC-signing configuration for a zone.
      </text>
    </description>
    <uses name="dnssec-sign-options"/>
  </augment>
  
</module>
